me="tmail.toorop.fr" 

log.trace.prefix = "TRACE "
log.info.prefix  = "INFO  "
log.warn.prefix  = "WARN  "
log.error.prefix = "ERROR "

log.trace.output = stderr
log.info.output  = stderr
log.warn.output  = stderr
log.error.output = stderr

#log.trace.output = off
#log.info.output  = /var/log/tmail/tmail.log
#log.warn.output  = /var/log/tmail/tmail.log
#log.error.output = /var/log/tmail/tmail.log

# Database
# db, err := gorm.Open("sqlite3", "/tmp/gorm.db")
# db, err := gorm.Open("postgres", "user=gorm dbname=gorm sslmode=disable")
# db, err := gorm.Open("mysql", "user:password@/dbname?charset=utf8&parseTime=True")
# db, err := gorm.Open("sqlite3", "/tmp/gorm.db")
db.driver="sqlite3"
db.dsn="/Users/toorop/Projects/go/src/github.com/Toorop/tmail/dist/db/tmail.db"
db.debug=true

# DSN
# ip:port:secured,[...]
# secured : non |Â tls | ssl

# default 127.0.0.1:25:none,127.0.0.1:465:ssl
smtp.dsn="127.0.0.1:2525:none,127.0.0.1:1465:ssl"

# Number of relays who previously take mail in charge 
# ->  preventing loops
smtp.in.maxhops=50

# Max size of an incoming message (in octets)
# default 50000000  (50Mo)
smtp.in.maxDataBytes=50000000

# Smtp timeout
# Wait for reply durin TIMEOUT seconds before
# shutting down connexion
smtp.in.timeout=60

# Mongodb
mongo.url = "localhost"
mongo.db = "protecmail"

# Queue
queue.strore.type="disk"
#queue.store.diskpath="/tmp"


# SMTP OUT

# Max concurrent deliveries
smtp.out.maxConcurrentDeliveries = 50


[prod]
app.name="tmail"
app.me="tmail.toorop.fr"